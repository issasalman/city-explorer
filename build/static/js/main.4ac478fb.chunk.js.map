{"version":3,"sources":["component/WeatherDay.js","component/Weather.js","component/Movie.js","component/Movies.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherDay","this","props","info","date","description","React","Component","Weather","console","log","locationData","display_name","Card","style","width","border","background","color","Body","Title","Text","lat","lon","Row","xs","md","className","locationInfo","map","element","movieInfo","title","overview","release_date","popularity","vote","count","Movies","locationMovie","margin","Movie","Img","variant","src","img","alt","App","submitForm","e","a","preventDefault","location","target","locationName","value","axios","get","process","response","setState","data","state","response2","locationImg","config","url","response3","response4","error","onSubmit","name","type","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ac478fb.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n// import Weather from \"./Weather\";\nclass WeatherDay extends React.Component {\n  render() {\n    return (\n      <div>\n        <p>{this.props.info.date} {this.props.info.description}</p>\n      </div>\n    );\n  }\n}\n\nexport default WeatherDay;\n\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport WeatherDay from \"./WeatherDay\";\nimport Row from \"react-bootstrap/Row\";\n\nclass Weather extends React.Component {\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        {this.props.locationData.display_name && (\n          <>\n            <Card\n              style={{\n                width: \"30rem\",\n                border: \"solid\",\n                background: \"white\",\n                color: \"white\",\n              }}\n            >\n              <Card.Body\n                style={{\n                  color: \"black\",\n                }}\n              >\n                <Card.Title>\n                  {\" \"}\n                  Display Name :{this.props.locationData.display_name}\n                </Card.Title>\n                <Card.Text>latitude : {this.props.locationData.lat}</Card.Text>\n                <Card.Text>longitude : {this.props.locationData.lon}</Card.Text>\n              </Card.Body>\n            </Card>\n\n            <Card\n              style={{\n                width: \"30rem\",\n                border: \"solid\",\n                background: \"white\",\n                color: \"white\",\n              }}\n            >\n              <Card.Body\n                style={{\n                  color: \"black\",\n                }}\n              >\n                <Card.Text> locationInfo :</Card.Text>\n                <Row xs={1} md={3} className=\"g-4\">\n                  {this.props.locationInfo.map((element) => {\n                    return <WeatherDay info={element} />;\n                  })}\n                </Row>\n              </Card.Body>\n            </Card>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// import Weather from \"./Weather\";\nclass WeatherDay extends React.Component {\n  render() {\n    return (\n      <div>\n        <p>{this.props.movieInfo.title}</p>\n        <p> {this.props.movieInfo.overview}</p> \n     \n        <p> {this.props.movieInfo.release_date}</p>\n        <p> {this.props.movieInfo.popularity}</p>\n        <p>  {this.props.movieInfo.vote}</p> \n        <p> {this.props.movieInfo.count} </p>\n      </div>\n    );\n  }\n}\n\nexport default WeatherDay;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Movie from \"./Movie\";\nclass Movies extends React.Component {\n  render() {\n    console.log(this.props);\n    return (\n      <>\n        <Row xs={1} md={3} className=\"g-4\">\n          {this.props.locationMovie.map((element) => {\n            return (\n              <Card\n                style={{\n                  width: \"30rem\",\n                  border: \"solid\",\n                  background: \"white\",\n                  color: \"white\",\n                  margin: \"10px\",\n                }}\n              >\n                <Card.Body\n                  style={{\n                    color: \"black\",\n                  }}\n                >\n                  <Card.Title>Movie</Card.Title>\n\n                  <Card.Text>\n                    {\" \"}\n                    <Movie movieInfo={element} />\n                  </Card.Text>\n\n                  <Card.Img\n                    variant=\"top\"\n                    src={`https://image.tmdb.org/t/p/w500${element.img} `}\n                    alt={element.title}\n                  />\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default Movies;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n// import Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Weather from \"./component/Weather\";\nimport Movies from \"./component/Movies\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationData: {},\n      error: false,\n      locationImg: \"\",\n      locationInfo: [],\n      locationMovie: [],\n    };\n  }\n  submitForm = async (e) => {\n    e.preventDefault();\n    try {\n      const location = e.target.locationName.value;\n      console.log(\"user Input Location: \", location);\n      const response = await axios.get(\n        `https://eu1.locationiq.com/v1/search.php?key=${process.env.REACT_APP_LOCATION_KEY}&q=${location}&format=json`\n      );\n      this.setState({\n        locationData: response.data[0],\n      });\n      const response2 = await axios.get(\n        `https://maps.locationiq.com/v3/staticmap?key=${process.env.REACT_APP_LOCATION_KEY}&center=${this.state.locationData.lat},${this.state.locationData.lon}&format=jpg `\n      );\n     \n      console.log(\"our axios response\", response.data[0]);\n      this.setState({\n        locationImg: response2.config.url,\n      });\n\n      const response3 = await axios.get(\n        `${process.env.REACT_APP_SERVER_URL}/weather?city=${location}`\n      );\n\n      this.setState({\n        locationInfo: response3.data,\n      });\n\n      const response4 = await axios.get(\n        `${process.env.REACT_APP_SERVER_URL}/movies?query=${location}`\n      );\n\n      this.setState({\n        locationMovie: response4.data,\n      });\n\n      console.log(\"our cs response\", this.state.locationInfo);\n    } catch (error) {\n      console.log(\"catch error\" + error);\n      this.setState({\n        error: true,\n      });\n    }\n  };\n  render() {\n   \n\n    console.log(this.state.locationInfo);\n    return (\n      <div>\n        <form onSubmit={this.submitForm}>\n          <label\n            style={{\n              color: \"white\",\n            }}\n          >\n            Location Name:{\" \"}\n          </label>\n          <input name=\"locationName\" type=\"text\" placeholder=\"Enter Location\" />\n          <input type=\"submit\" value=\"Search Location\" />\n        </form>\n        \n\n        <div>\n          <Weather\n            locationInfo={this.state.locationInfo}\n            locationData={this.state.locationData}\n          />\n        </div>\n        <div>\n          {this.state.error && (\n            <p style={{ color: \"white\" }}>Location not found try again </p>\n          )}\n          {this.state.locationData.lon && (\n            <p style={{ color: \"white\" }}>The Selected Map </p>\n          )}\n        </div>\n        <div>\n          <img src={this.state.locationImg} alt={\"\"} />\n        </div>\n        <div>\n          <Movies locationMovie={this.state.locationMovie} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}